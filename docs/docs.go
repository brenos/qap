// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "url": "http://brenos.github.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/car": {
            "get": {
                "description": "Return cars from DB, by ID, by dealership or by Brand and/or Model.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Return cars from DB",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "car search by id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "car search by idDealership",
                        "name": "idDealership",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "car search by brand",
                        "name": "brand",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "car search by model",
                        "name": "model",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a car in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Update a car in DB",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Car",
                        "name": "car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Car"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a car in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Create a car in DB",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Car",
                        "name": "car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateCarRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    }
                }
            }
        },
        "/car/{id}": {
            "delete": {
                "description": "Delete car from DB by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Delete car from DB",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    }
                }
            }
        },
        "/dealership": {
            "get": {
                "description": "Return dealership(s) from DB, by ID, by Country and/or Sate or All Dealerships.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dealerships"
                ],
                "summary": "Return dealership(s) from DB",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dealership search by id",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Dealership search by country",
                        "name": "country",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Dealership search by state",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a dealership in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dealerships"
                ],
                "summary": "Update a dealership in DB",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Dealership",
                        "name": "dealership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Dealership"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a dealership in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dealerships"
                ],
                "summary": "Create a dealership in DB",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User token",
                        "name": "token",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Dealership",
                        "name": "dealership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateDealershipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    }
                }
            }
        },
        "/dealership/{id}": {
            "delete": {
                "description": "Delete dealership from DB by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dealerships"
                ],
                "summary": "Delete dealership from DB",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Deslership ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    }
                }
            }
        },
        "/liveness": {
            "get": {
                "description": "Indicate that the service is alive",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Service alive",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    }
                }
            }
        },
        "/readiness": {
            "get": {
                "description": "Service able to receive requests",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Service able",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Create a user in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a user in DB",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/domain.Result"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Car": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "dealership": {
                    "$ref": "#/definitions/domain.Dealership"
                },
                "fuelType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "idDealership": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "year": {
                    "type": "number"
                }
            }
        },
        "domain.CleanCar": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "fuelType": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "year": {
                    "type": "number"
                }
            }
        },
        "domain.CreateCarRequest": {
            "type": "object",
            "required": [
                "brand",
                "fuelType",
                "idDealership",
                "model",
                "price",
                "year"
            ],
            "properties": {
                "brand": {
                    "type": "string",
                    "minLength": 3
                },
                "fuelType": {
                    "type": "string",
                    "minLength": 3
                },
                "idDealership": {
                    "type": "string"
                },
                "model": {
                    "type": "string",
                    "minLength": 3
                },
                "price": {
                    "type": "number",
                    "minimum": 0
                },
                "year": {
                    "type": "number",
                    "minimum": 1900
                }
            }
        },
        "domain.CreateDealershipRequest": {
            "type": "object",
            "required": [
                "address",
                "country",
                "name",
                "state"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "minLength": 3
                },
                "country": {
                    "type": "string",
                    "minLength": 3
                },
                "name": {
                    "type": "string",
                    "minLength": 3
                },
                "state": {
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "domain.CreateUserRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "domain.Dealership": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.CleanCar"
                    }
                },
                "country": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "domain.Result": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "context": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Quality Assurance Platform",
	Description:      "Free API's that was developed to help IT roles to learn, test and/or use API's to make a tests for new positions",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
